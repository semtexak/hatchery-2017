import React from 'react';
import Environment from '../environment/environment.js';
import Tools from './tools.js';

export const ScreenSizeMixin = {

  //@@viewOn:statics
  statics: {
    UU5_Common_screenSizeMixin: {
      requiredMixins: ['UU5_Common_BaseMixin'],
      defaults: {
        screenSizeEvent: 'UU5_Common_screenSize'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function () {
    // initialize
    this.registerMixin('UU5_Common_screenSizeMixin');
    // state
    return {
      screenSize: this.getScreenSize()
    };
  },

  componentDidMount: function (nextProps) {
    Environment.EventListener.registerScreenSize(this.getId(), this._onChangeScreenSize);
  },

  componentWillUnmount: function () {
    Environment.EventListener.unregisterScreenSize(this.getId(), this._onChangeScreenSize);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5_Common_screenSizeMixinProps: function () {
    return this.hasMixin('UU5_Common_screenSizeMixin');
  },

  getUU5_Common_screenSizeMixinProps: function () {
    return {
      screenSize: this.getScreenSize()
    };
  },

  getUU5_Common_screenSizeMixinPropsToPass: function () {
    return this.getUU5_Common_screenSizeMixinProps();
  },

  getScreenSize: function () {
    return (this.state && this.state.screenSize) || Tools.getScreenSize();
  },

  isXs: function () {
    return this.getScreenSize() === 'xs';
  },

  isSm: function () {
    return this.getScreenSize() === 'sm';
  },

  isMd: function () {
    return this.getScreenSize() === 'md';
  },

  isLg: function () {
    return this.getScreenSize() === 'lg';
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onChangeScreenSize: function (e, actualScreenSize) {
    if (typeof this.onChangeScreenSize_ === 'function') {
      this.onChangeScreenSize_(actualScreenSize, e);
    } else {
      this.setState({ screenSize: actualScreenSize });
    }
    return this;
  }
  //@@viewOff:componentSpecificHelpers
};

export default ScreenSizeMixin;
