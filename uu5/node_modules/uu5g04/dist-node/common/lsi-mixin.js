import React from 'react';
import Tools from './tools.js';
import Environment from '../environment/environment.js';

export const LsiMixin = {

  //@@viewOn:statics
  statics: {
    UU5_Common_LsiMixin: {
      requiredMixins: ['UU5_Common_BaseMixin'],
      lsiEvent: Tools.events.lsi
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    language: React.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      language: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function () {
    // initialize
    this.registerMixin('UU5_Common_LsiMixin');
    // state
    return {
      language: this.props.language || Environment.getLanguages()[0].location || Environment.getLanguages()[0].language
    };
  },

  componentDidMount: function () {
    Environment.EventListener.registerLsi(this.getId(), this._changeLanguage);
  },

  componentWillUnmount: function () {
    Environment.EventListener.unregisterLsi(this.getId(), this._changeLanguage);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5_Common_LsiMixin: function () {
    return this.hasMixin('UU5_Common_LsiMixin');
  },

  getUU5_Common_LsiMixinProps: function () {
    return {
      language: this.props.language
    };
  },

  getUU5_Common_LsiMixinPropsToPass: function () {
    return this.getUU5_Common_LsiMixinProps();
  },

  getLanguages: function () {
    return Environment.getLanguages();
  },

  getLanguage: function () {
    return this.state.language;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  // TODO: 'cs-CZ,en;q=0.8...' is set to state and never will be used, necessary is doing setState and render the component
  _setLanguage: function (language, setStateCallback) {
    this.setState({ language: language }, setStateCallback);
    return this;
  },

  _changeLanguage: function (language) {
    if (this.getLanguage() !== language) {
      if (typeof this.onChangeLanguage_ === 'function') {
        this.onChangeLanguage_(language);
      } else {
        this._setLanguage(language);
      }
    }
  }
  //@@viewOff:componentSpecificHelpers
};

export default LsiMixin;
