import React from 'react';
import {
  BaseMixin,
  ElementaryMixin,
  ContentMixin,
  ColorSchemaMixin,
  LevelMixin,
  NestingLevelMixin
} from '../common/common.js';
import Environment from '../environment/environment.js';
import Line from './line.js';
import Well from './well.js';

import './footer.less';

export const Footer = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ContentMixin,
    ColorSchemaMixin,
    LevelMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Footer',
    nestingLevelList: Environment.getNestingLevelList('bigBox', 'inline'),
    classNames: {
      main: 'uu5-bricks-footer',
      text: 'uu5-common-text'
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    let level = this.getLevel();
    let result;

    if (level > 0) {
      let height = '' + (0.6 - level * 0.05) + 'em';
      let attrs = this.buildMainAttrs();
      attrs.className += ' ' + this.getClassName().text;

      result = (
        <footer {...attrs}>
          <Line mainAttrs={{style: {height: height}}}/>
          {this.getChildren()}
        </footer>
      );
    } else {
      let className = this.getClassName().main;
      this.props.className && (className += ' ' + this.props.className);

      result = (
        <Well
          disabled={this.isDisabled()}
          hidden={this.isHidden()}
          selected={this.isSelected()}
          colorSchema={this.props.colorSchema}
          className={className}
          nestingLevel={this.getNestingLevel()}
        >
          {this.getChildren()}
        </Well>
      )
    }

    return result;
  }
  //@@viewOff:render
});

export default Footer;
