import React from 'react';
import {BaseMixin, ElementaryMixin, SectionMixin, Tools, NestingLevelMixin} from '../common/common.js';
import Environment from '../environment/environment.js';
import Factory from './factory.js';

import './ul-ol.less';

Factory.createList = function (tag) {
  return React.createClass({
    displayName: tag,

    //@@viewOn:mixins
    mixins: [
      BaseMixin,
      ElementaryMixin,
      SectionMixin,
      NestingLevelMixin
    ],
    //@@viewOff:mixins

    //@@viewOn:statics
    statics: {
      tagName: 'UU5.Bricks.' + tag,
      nestingLevelList: Environment.getNestingLevelList('bigBoxCollection', 'box'),
      classNames: {
        main: 'uu5-bricks-' + tag.toLowerCase()
      },
      defaults: {
        childTagName: 'UU5.Bricks.Li'
      }
    },
    //@@viewOff:statics

    //@@viewOn:propTypes
    propTypes: {
      allowTags: React.PropTypes.arrayOf(
        React.PropTypes.string
      )
    },
    //@@viewOff:propTypes

    //@@viewOn:getDefaultProps
    getDefaultProps: function () {
      return {
        allowTags: []
      };
    },
    //@@viewOff:getDefaultProps

    //@@viewOn:standardComponentLifeCycle
    shouldComponentUpdate(nextProps, nextState) {
      return this.shouldRender(nextProps, nextState);
    },
  //@@viewOff:standardComponentLifeCycle

    //@@viewOn:interface
    //@@viewOff:interface

    //@@viewOn:overridingMethods
    shouldChildRender_: function (child) {
      var childTagName = Tools.getChildTagName(child);
      var childTagNames = this.props.allowTags.concat(this.getDefault().childTagName);
      return childTagNames.indexOf(childTagName) > -1;
    },
    //@@viewOff:overridingMethods

    //@@viewOn:componentSpecificHelpers
    //@@viewOff:componentSpecificHelpers

    //@@viewOn:render
    render: function () {
      return (
        this.getNestingLevel()
          ? (React.createElement(
              tag.toLowerCase(),
              this.buildMainAttrs(),
              this.getHeaderChild(),
              this.getChildren(),
              this.getFooterChild(),
              this.getDisabledCover()
            )
          ) : null
      )
    }
    //@@viewOff:render
  });
};

export const Ul = Factory.createList('Ul');
export const Ol = Factory.createList('Ol');
