import React from 'react';
import {BaseMixin, ElementaryMixin, ColorSchemaMixin, CcrWriterMixin, NestingLevelMixin} from '../common/common.js';
import Environment from '../environment/environment.js';
//import {FloatMixin} from '../layout/layout.js';
import {Div} from './bricks.js';

import './click-confirm.less';

export const ClickConfirm = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ColorSchemaMixin,
    CcrWriterMixin,
    //FloatMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.ClickConfirm',
    nestingLevelList: Environment.getNestingLevelList('bigBoxCollection', 'inline'),
    classNames: {
      main: 'uu5-bricks-click-confirm',
      open: 'uu5-bricks-click-confirm-shown'
    },
    defaults: {
      showTimeout: 500,
      closeTimeout: 4000
    },
    opt: {
      nestingLevelRoot: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {},
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {};
  },

  getInitialState: function () {
    return {
      content: null,
      pageX: null,
      pageY: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function () {
    this.setState({hidden: true});
  },

  componentWillUnmount: function () {
    this.showTimeout && clearTimeout(this.showTimeout);
    this.closeTimeout && clearTimeout(this.closeTimeout);
  },
  
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  open: function (openAttrs) {
    var pageX = openAttrs.pageX;
    var pageY = openAttrs.pageY;

    if (openAttrs.event) {
      pageX = pageX || openAttrs.event.pageX;
      pageY = pageY || openAttrs.event.pageY;
    }

    this.showTimeout && clearTimeout(this.showTimeout);
    this.closeTimeout && clearTimeout(this.closeTimeout);

    var _this = this;
    this.showTimeout = setTimeout(function () {
      _this.setAsyncState({content: openAttrs.content, hidden: false, pageX: pageX, pageY: pageY}, function () {
        typeof openAttrs.onOpenCallback === 'function' && openAttrs.onOpenCallback();

        _this.closeTimeout = setTimeout(function () {
          _this.close(openAttrs.onClosedCallback);
        }, _this.getDefault().closeTimeout)
      });
    }, _this.getDefault().showTimeout);

    return this;
  },

  close: function (setStateCallback) {
    this.showTimeout && clearTimeout(this.showTimeout);
    this.closeTimeout && clearTimeout(this.closeTimeout);
    this.setState({content: null, hidden: true, pageX: null, pageY: null}, setStateCallback);
    return this;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs: function () {
    var props = this.getMainAttrs();

    !this.isHidden() && (props.className += ' ' + this.getClassName().open);

    if (this.state.pageX !== null) {
      props.style = {
        left: this.state.pageX,
        top: this.state.pageY
      };
    }
    props.nestingLevel = this.getNestingLevel();

    return props;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return (
      <Div {...this._getMainAttrs()}>
        {this.state.content}
        {this.getDisabledCover()}
      </Div>
    );
  }
  //@@viewOff:render
});

export default ClickConfirm;
