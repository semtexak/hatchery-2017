import React from 'react';
import {BaseMixin, ElementaryMixin, ContentMixin, NestingLevelMixin} from './../common/common.js';
import Environment from '../environment/environment.js';
import List from './tree-list.js';
import Item from './tree-item.js';

import './tree.less';

export const Tree = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ContentMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Tree',
    nestingLevelList: Environment.getNestingLevelList('box', 'smallBox'),
    classNames: {
      main: 'uu5-bricks-tree'
    },
    defaults: {
      childTagName: 'UU5.Bricks.Tree.Item'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    items: React.PropTypes.array,
    glyphiconExpanded: React.PropTypes.string,
    glyphiconCollapsed: React.PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      items: null,
      glyphiconExpanded: 'uu-glyphicon-minus',
      glyphiconCollapsed: 'uu-glyphicon-plus'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return (
      this.getNestingLevel()
        ? (
          <List
            {...this.getMainPropsToPass()}
            items={this.props.items || this.getChildren()}
            glyphiconExpanded={this.props.glyphiconExpanded}
            glyphiconCollapsed={this.props.glyphiconCollapsed}
          >
            {this.props.children && React.Children.toArray(this.props.children)}
            {this.getDisabledCover()}
          </List>
        ) : null
    );
  }
  //@@viewOff:render
});

Tree.List = List;
Tree.Item = Item;

export default Tree;
