//@@viewOn:import
import React from 'react';
import {BaseMixin, NestingLevelMixin, ElementaryMixin, Tools} from '../common/common.js';
import Environment from '../environment/environment.js';

import "./console.less";
//@@viewOff:import

export const Console = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Console',
    nestingLevelList: Environment.getNestingLevelList('bigBoxCollection', 'smallBox'),
    classNames: {
      main: 'uu5-bricks-console',
      arrow: "uu5-bricks-console-with-arrow"
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState() {
    return {
      content: []
    }
  },

  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  info(input) {
    this._log(input, "info");
    return this;
  },
  warning (input) {
    this._log(input, "warning");
    return this;
  },
  error (input) {
    this._log(input, "danger");
    return this;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _log(input, color) {
    let content = this.state.content.slice();
    content.push({
      content: this._prepareInput(input),
      color: color,
    });

    this.setState({content});
  },

  _prepareInput(input) {
    if (typeof input === "function") {
      return input.toString().split("{")[0];
    }
    return JSON.stringify(input, null, 2);
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let divs = [];
    for (let i = 0; i < this.state.content.length; i++) {
      divs.push(
        <UU5.Bricks.Div key={i}>
          <UU5.Bricks.Text className={this.getClassName().arrow} colorSchema={this.state.content[i].color}
                           content={this.state.content[i].content}/>
        </UU5.Bricks.Div>
      );
    }
    return (
      <UU5.Bricks.Pre {...this.getMainPropsToPass()}>
        {divs}
      </UU5.Bricks.Pre>
    );
  }
  //@@viewOff:render

});

export default Console;
