import React from 'react';
import {BaseMixin, ElementaryMixin, ContentMixin, NestingLevelMixin} from '../common/common.js';
import Button from './button.js';
import Glyphicon from './glyphicon.js';

import './nav-bar-header.less';

export default React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ContentMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.NavBar.Header',
    classNames: {
      main: 'uu5-bricks-nav-bar-header navbar-header',
      hamburger: 'uu5-bricks-nav-bar-header-hamburger navbar-toggle',
      brand: 'uu5-bricks-nav-bar-header-brand navbar-brand'
    },
    defaults: {
      parentTagName: 'UU5.Bricks.NavBar'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    _glyphicon: React.PropTypes.string,
    _hamburger: React.PropTypes.bool,
    _onOpen: React.PropTypes.func,
    _onClose: React.PropTypes.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      _glyphicon: 'uu-glyphicon-menu',
      _hamburger: true,
      _onOpen: null,
      _onClose: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function () {
    this.checkParentTagName(this.getDefault().parentTagName);
  },
  
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onClickHamburger: function () {
    var header = this;
    this.getParent() && this.getParent().toggle(function () {
      if (this.isOpen()) {
        header.props._onOpen && header.props._onOpen(this);
      } else {
        header.props._onClose && header.props._onClose(this);
      }
    });
  },

  _getHamburgerProps: function () {
    return {
      className: this.getClassName().hamburger,
      onClick: this._onClickHamburger
    };
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    var hamburger = null;
    if (this.props._hamburger) {
      hamburger = (
        <Button {...this._getHamburgerProps()}>
          <Glyphicon glyphicon={this.props._glyphicon}/>
        </Button>
      );
    }

    var children = this.getChildren();
    if (children) {
      children = (
        <span className={this.getClassName().brand}>
          {children}
        </span>
      );
    }

    return (
      this.getNestingLevel()
        ? (
          <div {...this.buildMainAttrs()}>
            {hamburger}
            {children}
            {this.getDisabledCover()}
          </div>
        ) : null
    );
  }
  //@@viewOff:render
});
