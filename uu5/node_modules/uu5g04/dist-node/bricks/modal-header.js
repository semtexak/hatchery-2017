import React from 'react';
import {BaseMixin, ElementaryMixin, ContentMixin} from '../common/common.js';
import Link from './link.js';

import {Header} from './bricks.js';

import './modal-header.less';

export default React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ContentMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Modal.Header',
    classNames: {
      main: 'uu5-bricks-modal-header modal-header',
      close: 'uu5-bricks-modal-header-close close'
    },
    defaults: {
      parentTagName: 'UU5.Bricks.Modal'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    _sticky: React.PropTypes.bool,
    _onClose: React.PropTypes.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      _sticky: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function () {
    this.checkParentTagName(this.getDefault().parentTagName);
  },
  
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onCloseHandler: function (e) {
    typeof this.props._onClose === 'function' && this.props._onClose(e);
  },

  _getCloseButton: function () {
    var button;
    if (!this.props._sticky) {
      button =
        <Link className={this.getClassName().close} onClick={this._onCloseHandler} content='&times;' />;
    }
    return button;
  },

  _buildChildren: function () {
    let content = this.getContent();
    if (typeof content === 'string') {
      return <Header className='modal-title' level={4} content={content} />;
    } else {
      return this.getChildren();
    }
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    var mainAttrs = this.buildMainAttrs();

    return (
      <div {...mainAttrs}>
        {this._getCloseButton()}
        {this._buildChildren()}
        {this.getDisabledCover()}
      </div>
    );
  }
  //@@viewOff:render
});