import React from 'react';
import {BaseMixin, ElementaryMixin, NestingLevelMixin, ColorSchemaMixin, ContentMixin} from '../common/common.js';
import Environment from '../environment/environment.js';
import {Div} from './bricks.js';

import './loading.less';

export const Loading = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ContentMixin,
    ColorSchemaMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Loading',
    nestingLevelList: Environment.getNestingLevelList('bigBoxCollection', 'inline'),
    classNames: {
      main: 'uu5-bricks-loading uu5-common-padding-5',
      animated: 'uu5-bricks-loading-animated',
      inline: 'uu5-common-inline',
      dot: "uu5-bricks-loading-dot"
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    inline: React.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      inline: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainProps: function () {
    let attrs = this.buildMainAttrs();
    !this.getChildren() && !this.props.text && (attrs.className += ' ' + this.getClassName().animated);
    this.props.inline && (attrs.className += ' ' + this.getClassName().inline);
    attrs.nestingLevel = this.getNestingLevel();
    return attrs;
  },

  _getDefaultContent: function () {
    return React.Children.toArray([1, 2, 3].map(function () {
      return <span className={this.getClassName().dot}/>;
    }.bind(this)));
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return (
      <Div {...this._getMainProps()}>
        {this.getChildren() || this._getDefaultContent()}
        {this.getDisabledCover()}
      </Div>
    );
  }
  //@@viewOff:render
});

export default Loading;
