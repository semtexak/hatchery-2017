import React from 'react';
import {BaseMixin, ElementaryMixin, NestingLevelMixin} from '../common/common.js';
import Environment from '../environment/environment.js';
import Iframe from './iframe.js'

import './youtube-video.less';

export const YoutubeVideo = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.YoutubeVideo',
    nestingLevelList: Environment.getNestingLevelList('bigBox', 'box'),
    classNames: {
      main: 'uu5-bricks-youtube-video',
      size: 'uu5-bricks-youtube-video-'
    },
    defaults: {
      source: 'https://www.youtube.com/embed/'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    autoplay: React.PropTypes.bool,
    disableControls: React.PropTypes.bool,
    loop: React.PropTypes.bool,
    disableInfo: React.PropTypes.bool,
    src: React.PropTypes.string.isRequired,
    disableRelatedVideos: React.PropTypes.bool,
    size: React.PropTypes.oneOf(['xs', 'sm', 'md', 'lg']),
    disableFullscreen: React.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      autoplay: false,
      disableControls: false,
      loop: false,
      disableInfo: false,
      src: '',
      disableRelatedVideos: false,
      size: 'sm',
      disableFullscreen: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _buildLink: function () {
    let origin = this.props.src;
    let source = this.getDefault().source;
    let params = [];

    source += origin.slice(32);

    this.props.autoplay && (params.push('autoplay=1'));
    this.props.disableControls && (params.push('controls=0'));
    this.props.loop && (params.push('loop=1'));
    this.props.disableInfo && (params.push('autoplay=1'));
    this.props.autoplay && (params.push('showinfo=0'));
    this.props.disableRelatedVideos && (params.push('rel=0'));
    this.props.disableFullscreen && (params.push('fs=0'));

    if (params.length) source = source + '?' + params.join('&amp;');

    return source
  },

  _buildMainAttrs: function () {
    let mainProps = this.buildMainAttrs();

    mainProps.className += ' ' + this.getClassName().size + this.props.size;

    mainProps.src = this._buildLink();

    return mainProps;
  },

  //@@viewOff:componentSpecificHelpers

  // Render

  //@@viewOn:render
  render: function () {
    return this.getNestingLevel() ? <iframe {...this._buildMainAttrs()} /> : null;
  }
  //@@viewOff:render
});

export default YoutubeVideo;
