import React from 'react';
import {BaseMixin, ElementaryMixin, NestingLevelMixin, SectionMixin} from '../common/common.js';
import './container.less'

export const Container = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    NestingLevelMixin,
    SectionMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Container',
    nestingLevel: 'container',
    classNames: {
      main: 'uu5-bricks-container',
      containerStyleStandard: 'uu5-bricks-container-standard container',
      containerStyleFluid: 'uu5-bricks-container-fluid container-fluid'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    containerStyle: React.PropTypes.oneOf(['standard', 'fluid'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      containerStyle: 'standard'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs() {
    let mainAttrs = this.buildMainAttrs();
    switch (this.props.containerStyle) {
      case 'fluid':
        mainAttrs.className += ' ' + this.getClassName().containerStyleFluid;
        break;
      default:
        mainAttrs.className += ' ' + this.getClassName().containerStyleStandard;
    }
    return mainAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return (
      this.getNestingLevel()
        ? (
        <div {...this._getMainAttrs()}>
          {this.getHeaderChild()}
          {this.getChildren()}
          {this.getFooterChild()}
          {this.getDisabledCover()}
        </div>
      ) : null
    );
  }
  //@@viewOff:render
});

export default Container;
