import React from 'react';
import {
  BaseMixin,
  ElementaryMixin,
  SectionMixin,
  ColorSchemaMixin,
  Tools,
  NestingLevelMixin
} from './../common/common.js';
import Environment from '../environment/environment.js';
import TableCol from './table-col.js';
import TableColGroup from './table-col-group.js';
import TableTBody from './table-tbody.js';
import TableTd from './table-td.js';
import TableTFoot from './table-tfoot.js';
import TableTh from './table-th.js';
import TableTHead from './table-thead.js';
import TableTr from './table-tr.js';

import './table.less';

export const Table = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    SectionMixin,
    ColorSchemaMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Table',
    nestingLevelList: Environment.getNestingLevelList('bigBoxCollection','smallBox'),
    classNames: {
      main: 'uu5-bricks-table',
      table: 'table',
      striped: 'table-striped',
      bordered: 'table-bordered',
      hover: 'table-hover',
      condensed: 'table-condensed',
      responsive: 'table-responsive'
    },
    defaults: {
      childTagNames: ['UU5.Bricks.Table.Tr', 'UU5.Bricks.Table.THead', 'UU5.Bricks.Table.TBody', 'UU5.Bricks.Table.TFoot', 'UU5.Bricks.Table.ColGroup']
    },
    opt:{
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    striped: React.PropTypes.bool,
    bordered: React.PropTypes.bool,
    hover: React.PropTypes.bool,
    condensed: React.PropTypes.bool,
    responsive: React.PropTypes.bool,
    allowTags: React.PropTypes.arrayOf(
      React.PropTypes.string
    )
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      striped: false,
      bordered: false,
      hover: false,
      condensed: false,
      responsive: false,
      allowTags: []
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle

  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  shouldChildRender_: function (child) {
    var childTagName = Tools.getChildTagName(child);
    var childTagNames = this.props.allowTags.concat(this.getDefault().childTagNames);
    return childTagNames.indexOf(childTagName) > -1;
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainProps: function () {
    var props = this.buildMainAttrs();
    this.props.responsive && (props.className += ' ' + this.getClassName().responsive);
    return props;
  },

  _buildTableAttrs: function () {
    var tableAttrs = {className: this.getClassName().table};
    this.props.striped && (tableAttrs.className += ' ' + this.getClassName().striped);
    this.props.bordered && (tableAttrs.className += ' ' + this.getClassName().bordered);
    this.props.hover && (tableAttrs.className += ' ' + this.getClassName().hover);
    this.props.condensed && (tableAttrs.className += ' ' + this.getClassName().condensed);
    return tableAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return (
      this.getNestingLevel()
        ? (
          <div {...this._getMainProps()}>
            {this.getHeaderChild()}
            <table {...this._buildTableAttrs()}>
              {this.getChildren()}
            </table>
            {this.getFooterChild()}
            {this.getDisabledCover()}
          </div>
        ) : null
    );
  }
  //@@viewOff:render
});

Table.ColGroup = TableColGroup;
Table.Col = TableCol;
Table.TBody = TableTBody;
Table.Td = TableTd;
Table.TFoot = TableTFoot;
Table.Th = TableTh;
Table.THead = TableTHead;
Table.Tr = TableTr;

export default Table;
