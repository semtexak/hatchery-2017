import React from 'react';
import Environment from '../environment/environment.js';
import {BaseMixin, ElementaryMixin, ColorSchemaMixin, NestingLevelMixin} from '../common/common.js';


import './line.less';

export const Line = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ColorSchemaMixin,
    NestingLevelMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Bricks.Line',
    nestingLevel: 'smallBox',
    classNames: {
      main: 'uu5-bricks-line uu5-common-bg',
      size: 'uu5-bricks-line-size-'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    size: React.PropTypes.oneOf(['xs', 'sm', 'md', 'lg'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      size: 'sm'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _buildMainAttrs: function () {
    var mainAttrs = this.buildMainAttrs();
    mainAttrs.className += ' ' + this.getClassName().size + this.props.size;
    return mainAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return (
      this.getNestingLevel()
        ? (
          <div {...this._buildMainAttrs()}>
            {this.getDisabledCover()}
          </div>
        ) : null
    );
  }
  //@@viewOff:render
});

var createColoredLine = function (colorSchema) {
  return (
    React.createClass({
      render: function () {
        return <Line {...this.props} colorSchema={colorSchema}/>;
      }
    })
  )
};

Environment.colorSchema.forEach(function (colorSchema) {
  Line[colorSchema] = createColoredLine(colorSchema);
});

export default Line;
