import React from 'react';
import {BaseMixin, ElementaryMixin} from './../common/common.js';

import {Button, Glyphicon} from './../bricks/bricks.js';

import InputMixin from './mixins/input-mixin.js'

import Message from './internal/message.js';

import './checkbox.less';

export const Checkbox = React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    InputMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Forms.Checkbox',
    classNames: {
      main: 'uu5-forms-checkbox',
      button: 'uu5-forms-checkbox-button',
      right: 'uu5-forms-input-label-right',
      radio: 'uu5-forms-input-radio'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: React.PropTypes.bool,
    onGlyphicon: React.PropTypes.string,
    offGlyphicon: React.PropTypes.string,
    labelPosition: React.PropTypes.oneOf(['left', 'right']),
    _radio: React.PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps () {
    return {
      value: false,
      onGlyphicon: 'uu-glyphicon-ok',
      offGlyphicon: null,
      labelPosition: 'left',
      _radio: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setState({value: nextProps.value});
    }
  },

  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onChange(e){
    let opt = {value: !this.state.value, event: e, component: this};

    if (!this.isDisabled() && !this.isReadOnly()) {
      if (typeof this.props.onChange === 'function') {
        this.props.onChange(opt);
      } else {
        this.setState((state) => ({value: !state.value}));
        return this;
      }
    }
  },

  _getMainAttrs(){
    let mainAttrs = this._getInputAttrs();
    if (this.props._radio) {
      mainAttrs.className += ' ' + this.getClassName().radio;
    }

    if (this.props.labelPosition === 'right') {
      mainAttrs.className += ' ' + this.getClassName().right;
    }

    return mainAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render () {
    let inputId = this.getId() + '-input';

    let label = this.getLabel(inputId);

    return (
      <div {...this._getMainAttrs()}>
        {this.props.labelPosition === 'left' && label}
        {this.getInputWrapper(
          [
            <Button
              content={<Glyphicon
                glyphicon={this.state.value ? this.props.onGlyphicon : this.props.offGlyphicon}
              />}
              onClick={this._onChange}
              className={this.getClassName().button}
              colorSchema='default'
              disabled={this.props.disabled}
              mainAttrs={this.props.inputAttrs}
            />,
            this.props.labelPosition === 'right' && label,
            this.props.labelPosition === 'right' && this.props.message &&
            <Message feedback={this.getFeedback()} content={this.getMessage()}/>
          ])}

      </div>
    );
  }
  //@@viewOn:render
});

export default Checkbox;
