import React from 'react';
import {BaseMixin, ElementaryMixin, ContentMixin} from './../common/common.js';
import {Link} from './../bricks/bricks.js';

import './select-option.less';

export default React.createClass({

  //@@viewOn:mixins
  mixins: [
    BaseMixin,
    ElementaryMixin,
    ContentMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'UU5.Forms.Select.option',
    classNames: {
      main: 'uu5-forms-select-option list-group-item'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: React.PropTypes.string.isRequired,
    selectedContent: React.PropTypes.any,
    onClick: React.PropTypes.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps () {
    return {
      value: null,
      selectedContent: null,
      onClick: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getValue () {
    return this.props.value;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainProps () {
    var props = this.getMainPropsToPass();

    props.onClick = (link, e) => {
      this.props.onClick({ component: this, event: e, value: this.getIndex() });
    };

    if (!props.content && !this.props.children) {
      props.content = this.props.value;
    }

    return props;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render () {
    return (
      <Link {...this._getMainProps()}>
        {this.props.children && React.Children.toArray(this.props.children)}
      </Link>
    );
  }
  //@@viewOff:render
});
